import { jsPDF } from 'jspdf';
import 'jspdf-autotable';
import logo from '../../../assets/logo';

const generatePDF = (data, filename, type, userName, startDate, endDate, selectedType) => {
    const doc = new jsPDF();

    const pageWidth = doc.internal.pageSize.getWidth();
    const imgWidth = 80; 
    const imgHeight = 20; 
    const xPos = (pageWidth - imgWidth) / 2; 
    const yPos = 10; 

    doc.addImage(logo, 'PNG', xPos, yPos, imgWidth, imgHeight);

    const lineY = yPos + imgHeight + 5; 
    doc.setDrawColor(0);
    doc.setLineWidth(0.5);
    doc.line(10, lineY, pageWidth - 10, lineY); 

    let yPosition = lineY + 10; 

    doc.setFontSize(12);
    doc.setTextColor(50, 50, 50);

    // Add Username
    doc.text(`User: ${userName}`, 10, yPosition);

    // Add Transaction Type if applicable
    if (selectedType) {
        yPosition += 10;
        doc.text(`Transaction Type: ${selectedType}`, 10, yPosition);
    }

    // Add Time Period if applicable
    if (startDate && endDate) {
        yPosition += 10;
        doc.text(`Time Period: ${startDate.toLocaleDateString()} - ${endDate.toLocaleDateString()}`, 10, yPosition);
    }

    // Add title based on type
    yPosition += 20; 
    const title = type === 'wallet' ? 'Wallet Transactions' : 'Referral Logs';
    const titleWidth = doc.getStringUnitWidth(title) * doc.internal.getFontSize() / doc.internal.scaleFactor;
    const titleX = (pageWidth - titleWidth) / 2;
    doc.text(title, titleX, yPosition);

    yPosition += 10; 

    const columns = type === 'wallet'
        ? [
            { header: 'Date', dataKey: 'date' },
            { header: 'Description', dataKey: 'type' },
            { header: 'Amount', dataKey: 'amount' },
            { header: 'Status', dataKey: 'status' },
          ]
        : [
            { header: 'Date', dataKey: 'date' },
            { header: 'Referred User', dataKey: 'referredUserName' },
            { header: 'Status', dataKey: 'status' },
          ];

 
    const rows = data.map(item => ({
        date: new Date(item.date).toLocaleDateString(),
        ...(type === 'wallet' ? {
            type: item.type,
            amount: `LKR ${item.amount}`,
            status: item.status || 'Success',
        } : {
            referredUserName: item.referredUserName,
            status: item.status || 'Success',
        }),
    }));

    
    doc.autoTable({
        columns,
        body: rows,
        startY: yPosition,
    });

    // Add autogenerated text at the bottom of the page
    const autoGenText = `This is an autogenerated PDF for ${userName} from Ceylon Odyssey on ${new Date().toLocaleDateString()}`;
    const autoGenYPos = doc.internal.pageSize.height - 20; 
    doc.setTextColor(150, 150, 150); 
    doc.text(autoGenText, 10, autoGenYPos);

   
    doc.save(filename);
};

export default generatePDF;
